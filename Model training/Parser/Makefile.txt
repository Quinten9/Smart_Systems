################################################################################
# Copyright (c) 2019, NVIDIA CORPORATION. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
################################################################################

CUDA_VER ?= 10.2

# Check if CUDA_VER is set
ifeq ($(CUDA_VER),)
  $(error "CUDA_VER is not set")
endif

# Set compiler and NVCC path
CC := g++
NVCC := /usr/local/cuda-$(CUDA_VER)/bin/nvcc

# Include paths: Add path to DeepStream SDK include directory and TensorRT headers
CFLAGS := -Wall -std=c++11 -shared -fPIC -Wno-error=deprecated-declarations
CFLAGS += -I../../includes -I/usr/local/cuda-$(CUDA_VER)/include
CFLAGS += -I/opt/nvidia/deepstream/deepstream/sources/includes  

# Linking flags and libraries
LIBS := -lnvinfer_plugin -lnvinfer -lnvparsers -L/usr/local/cuda-$(CUDA_VER)/lib64 -lcudart -lcublas -lstdc++fs
LFLAGS := -shared -Wl,--start-group $(LIBS) -Wl,--end-group

# Source files and header files
INCS := $(wildcard *.h)
SRCFILES := nvdsparsebbox_Yolo.cpp \
            trt_utils.cpp

# Target shared library
TARGET_LIB := libnvdsinfer_custom_impl_Yolo11.so

# Object files
TARGET_OBJS := $(SRCFILES:.cpp=.o)

# Default target
all: $(TARGET_LIB)

# Compile .cpp files
%.o: %.cpp $(INCS) Makefile
	$(CC) -c -o $@ $(CFLAGS) $<

# Link the object files to create the shared library
$(TARGET_LIB): $(TARGET_OBJS)
	$(CC) -o $@ $(TARGET_OBJS) $(LFLAGS)

# Clean up build files
clean:
	rm -rf $(TARGET_LIB) $(TARGET_OBJS)
